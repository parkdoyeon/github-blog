{"componentChunkName":"component---src-templates-post-js","path":"/c-기본서-객체지향","result":{"data":{"markdownRemark":{"html":"<h3 id=\"getter-setter를-사용하면-좋은-이유\"><a href=\"#getter-setter%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%A9%B4-%EC%A2%8B%EC%9D%80-%EC%9D%B4%EC%9C%A0\" aria-label=\"getter setter를 사용하면 좋은 이유 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Getter Setter를 사용하면 좋은 이유</h3>\n<ul>\n<li>필드를 직접 호출하여 값변경을 하면 제약을 두고싶을때(ex 환율계산, 값 범위 제한 등 ) 필드값이 사용되는 지점에 직접 가서 변경해야한다.</li>\n<li>Get/Set 프로퍼티 정의를 위한 접근제한을 걸어두면 추후에 유지보수가 용이하다.</li>\n</ul>\n<h3 id=\"seal\"><a href=\"#seal\" aria-label=\"seal permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>seal</h3>\n<ul>\n<li>다른 클래스가 자신을 상속받지 못하도록 하는 예약어이다</li>\n</ul>\n<h3 id=\"접근제한자와-base-예약어\"><a href=\"#%EC%A0%91%EA%B7%BC%EC%A0%9C%ED%95%9C%EC%9E%90%EC%99%80-base-%EC%98%88%EC%95%BD%EC%96%B4\" aria-label=\"접근제한자와 base 예약어 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>접근제한자와 base 예약어</h3>\n<ul>\n<li>C#은 접근제한자를 생략하면 기본적으로 internal이 적용된다.</li>\n<li>Class 멤버의 경우 private로 설정된다</li>\n<li>\n<p>때문에 부모클래스에서 값을 초기화가 필요한 자식 클래스에서 base 예약어를 통해 직접 초기화해주는 방법을 사용할 수 있다</p>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">class Book\n{\ndecimal isbn13;\npublic Book(decimal isbn13)\n{\n    this.isbn13 = isbn13;\n}\n}\nclass EBook : Book\n{\npublic EBook() : base(0)\n{\n}\npublic EBook(decimal isbn) : base(isbn) //이렇게 연계도 가능\n{\n}\n}</code></pre></div>\n</li>\n</ul>\n<h3 id=\"as-연산자\"><a href=\"#as-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"as 연산자 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>as 연산자</h3>\n<ul>\n<li>부모타입의 자료를 자식타입으로 명시적 형변환하면 컴파일은 일어나지만 실행단계에서 값을 호출하면 오류가 발생한다.</li>\n<li>런타임 에러를 발생시키는 것은 상당한 부하를 줄 수 있으므로, 형변환 실패시 값을 null로 넣어주는 as 형변환을 권장한다.</li>\n<li>참조타입에만 사용할 수 있다.</li>\n</ul>\n<h3 id=\"tostring-equals는-기본타입에-사용될경우-재정의-된다\"><a href=\"#tostring-equals%EB%8A%94-%EA%B8%B0%EB%B3%B8%ED%83%80%EC%9E%85%EC%97%90-%EC%82%AC%EC%9A%A9%EB%90%A0%EA%B2%BD%EC%9A%B0-%EC%9E%AC%EC%A0%95%EC%9D%98-%EB%90%9C%EB%8B%A4\" aria-label=\"tostring equals는 기본타입에 사용될경우 재정의 된다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ToString(), Equals()는 기본타입에 사용될경우 재정의 된다</h3>\n<ul>\n<li>equals의 경우 참조 타입을 암시형변환을 통해 재정의 하면 값비교가 가능해진다.</li>\n</ul>\n<h3 id=\"정적-생성자의-호출순서\"><a href=\"#%EC%A0%95%EC%A0%81-%EC%83%9D%EC%84%B1%EC%9E%90%EC%9D%98-%ED%98%B8%EC%B6%9C%EC%88%9C%EC%84%9C\" aria-label=\"정적 생성자의 호출순서 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정적 생성자의 호출순서</h3>\n<ul>\n<li><strong>최초로 접근하는 시점에 단 한번만 실행된다</strong></li>\n<li>처음 호출하거나 인스터스 생성자를 통해 객체가 만들어지는 시점에!</li>\n</ul>","timeToRead":2,"excerpt":"Getter Setter를 사용하면 좋은 이유 필드를 직접 호출하여 값변경을 하면 제약을 두고싶을때(ex 환율계산, 값 범위 제한 등 ) 필드값이 사용되는 지점에 직접 가서 변경해야한다. Get/Set…","frontmatter":{"title":"c# 기본서 - 객체지향","cover":"","date":"2018-10-14T18:10:00.000Z","categories":["C#"],"tags":["c#","객체지향","기본","base","getter","setter","as","static"]},"fields":{"slug":"/c-기본서-객체지향","date":"October 13, 2018"}}},"pageContext":{"slug":"/c-기본서-객체지향","nexttitle":"kafka - 설치하기","nextslug":"/kafka-설치하기","prevtitle":"c# 기본서 - 다형성","prevslug":"/c-기본서-다형성"}}}