{"componentChunkName":"component---src-templates-post-js","path":"/asp-net-core-nuget-package-배포하기","result":{"data":{"markdownRemark":{"html":"<p>사실 누겟패키지 생성방법은 <a href=\"https://docs.microsoft.com/ko-kr/nuget/quickstart/create-and-publish-a-package-using-the-dotnet-cli\">공식문서</a>에 아주 잘 정리되어있다. 이 글은 공식문서를 내 언어로 한번 더 정리하고, 내부 패키지 서버에 배포하는 과정과 거기서 발생한 트러블 슈팅과정을 덧붙이는 것을 목적으로 한다. 닷넷 코어로 빌드한 누겟 패키지를 배포하고 또 닷넷 코어 프로젝트에 적용하면서 기록용으로 글을 작성하게 됐는데, 이전에 일반 닷넷 프레임워크 누겟 패키지 빌드/배포와 크게 달라진 점은 없는 것 같다.</p>\n<p>패키지의 빌드방식은 크게 세가지라고 할 수 있다.</p>\n<h1 id=\"방법-1-빌드-옵션을-통한-패키지-파일-자동생성\"><a href=\"#%EB%B0%A9%EB%B2%95-1-%EB%B9%8C%EB%93%9C-%EC%98%B5%EC%85%98%EC%9D%84-%ED%86%B5%ED%95%9C-%ED%8C%A8%ED%82%A4%EC%A7%80-%ED%8C%8C%EC%9D%BC-%EC%9E%90%EB%8F%99%EC%83%9D%EC%84%B1\" aria-label=\"방법 1 빌드 옵션을 통한 패키지 파일 자동생성 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>방법 1. 빌드 옵션을 통한 패키지 파일 자동생성</h1>\n<p>csproj에 아래의 설정값을 추가해주고 빌드하면 bin디렉토리 내 빌드 버전 폴더에 .nupkg파일이 생성된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PropertyGroup</span> <span class=\"token attr-name\">Condition</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">'</span>$(Configuration)|$(Platform)'=='Debug|AnyCPU'<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PackageId</span><span class=\"token punctuation\">></span></span>something.for.core<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PackageId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Version</span><span class=\"token punctuation\">></span></span>1.0.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Version</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Authors</span><span class=\"token punctuation\">></span></span>someauthor<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Authors</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Company</span><span class=\"token punctuation\">></span></span>somecompany<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Company</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>GeneratePackageOnBuild</span><span class=\"token punctuation\">></span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>GeneratePackageOnBuild</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PropertyGroup</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h1 id=\"방법-2-명령어로-생성하기\"><a href=\"#%EB%B0%A9%EB%B2%95-2-%EB%AA%85%EB%A0%B9%EC%96%B4%EB%A1%9C-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"방법 2 명령어로 생성하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>방법 2. 명령어로 생성하기</h1>\n<p>빌드 설정에 누겟패키지 설정을 추가하는 것이 귀찮다면(혹은 property값을 굳이 남기고 싶지 않다면) 커맨드라인 명령어로 생성할수도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">dotnet pack <span class=\"token operator\">-</span>c release</code></pre></div>\n<h1 id=\"방법-3-nuget-package-explorer에서-생성하기\"><a href=\"#%EB%B0%A9%EB%B2%95-3-nuget-package-explorer%EC%97%90%EC%84%9C-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"방법 3 nuget package explorer에서 생성하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>방법 3. nuget package explorer에서 생성하기</h1>\n<p>GUI를 통해 패키지를 생성할 수 있다. 윈도우 마켓에서 nuget package explorer를 설치해서 빌드하면 된다. 처음에 쓰면 혼란스러운 구석은 있어도 사용 자체는 어렵지 않아서 설명은 생략한다. 빌드 파일의 디렉토리 구성이나 버전별 관리까지 이래저래 손이 가는 부분이 있어서 특별한 경우가 아니면 사용하지 않는 것이 좋은 것 같다.</p>\n<h1 id=\"배포하기---cmd를-사용한-배포\"><a href=\"#%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0---cmd%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-%EB%B0%B0%ED%8F%AC\" aria-label=\"배포하기   cmd를 사용한 배포 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배포하기 - cmd를 사용한 배포</h1>\n<p>배포도 마찬가지로 위의 방법 세가지를 다 쓸 수 있다.누겟 익스플로러에서 해도되고, cmd에서 해도 된다. cmd는 아래와 같이 작성하면 된다. </p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">dotnet nuget push something<span class=\"token punctuation\">.</span><span class=\"token keyword\">for</span><span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>nupkg <span class=\"token operator\">-</span>k somecompany <span class=\"token operator\">-</span>s https:<span class=\"token operator\">/</span><span class=\"token operator\">/</span>api<span class=\"token punctuation\">.</span>nuget<span class=\"token punctuation\">.</span>org<span class=\"token operator\">/</span>v3<span class=\"token operator\">/</span>index<span class=\"token punctuation\">.</span>json</code></pre></div>\n<p><code class=\"language-text\">-k</code>는 키값을 넣는 파라미터인데, 내부서버에 배포하는 경우 키값을 임의로(아무거나) 작성해도 되지만, 누겟서버에 배포하는 경우 발급받은 키값을 입력해야한다.  내 경우 사내에서 사용하는 sonatype nexus package서버에 배포를 해야야 하므로 키값을 임의로 지정했다. 배포 url은 다운로드용으로 연결할때는 <code class=\"language-text\">https://package.mycompany.com/repository/nuget-group/</code> 주소로 했는데, 배포시에는 <code class=\"language-text\">https://package.mycompany.com/repository/nuget-hosted/</code>주소로 배포해야 했다. 이 점을 몰라서 조금 헤맸다.</p>\n<h1 id=\"배포하기---누겟-익스플로러를-사용한-배포\"><a href=\"#%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0---%EB%88%84%EA%B2%9F-%EC%9D%B5%EC%8A%A4%ED%94%8C%EB%A1%9C%EB%9F%AC%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-%EB%B0%B0%ED%8F%AC\" aria-label=\"배포하기   누겟 익스플로러를 사용한 배포 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배포하기 - 누겟 익스플로러를 사용한 배포</h1>\n<p>누겟 익스플로러에서 배포하는 경우 생성된 로컬 누겟패키지를 익스플로러에서 연 다음 <code class=\"language-text\">File &gt; Publish</code>를 누르면 아래와같은 팝업이 나온다. 주소와 키값을 넣고 배포 버튼을 누르면 된다.\n<img src=\"/image/csharp/2019-07-23-nuget-1.png\" alt=\"nuget\">\n주소입력창 하단에 <code class=\"language-text\">api/v2/package</code>경로를 배포경로에 더할것인지 체크하는 체크박스가 있는데 하지 않아도 된다.</p>\n<h1 id=\"fyi---trouble-shooting\"><a href=\"#fyi---trouble-shooting\" aria-label=\"fyi   trouble shooting permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>FYI - Trouble Shooting</h1>\n<p>누겟 패키지를 게시하고 프로젝트에서 정상적으로 설치까지 했지만, cs 파일에서 패키지 호출시 네임스페이스를 인식 못하는 문제가 있었다. 이때 패키지 버전을 올려서 게시한 다음 패키지 업데이트를 하니 문제가 해결됐다. 또 그 이후에 다른 누겟 프로젝트를 최초로 빌드해 올렸을때는 정상적으로 레퍼런스 참조가 됐다. 해결법은 찾았지만 재현이 안된다. 대체 무엇이 문제였던 것일까.</p>","timeToRead":3,"excerpt":"…","frontmatter":{"title":"ASP.NET Core nuget package 배포하기","cover":"","date":"2019-07-23T15:08:12.000Z","categories":["C#"],"tags":["csharp","dotnetcore","nuget"]},"fields":{"slug":"/asp-net-core-nuget-package-배포하기","date":"July 22, 2019"}}},"pageContext":{"slug":"/asp-net-core-nuget-package-배포하기","nexttitle":"big sort 문제 풀기 - sort()함수에 대한 고찰","nextslug":"/big-sort-문제-풀기-sort-함수에-대한-고찰","prevtitle":"파이썬 dictionary활용을 위한 빌트인 함수들","prevslug":"/파이썬-dictionary활용을-위한-빌트인-함수들"}}}