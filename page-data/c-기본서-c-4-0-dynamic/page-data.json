{"componentChunkName":"component---src-templates-post-js","path":"/c-기본서-c-4-0-dynamic","result":{"data":{"markdownRemark":{"html":"<h3 id=\"40-주요변화\"><a href=\"#40-%EC%A3%BC%EC%9A%94%EB%B3%80%ED%99%94\" aria-label=\"40 주요변화 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.0 주요변화</h3>\n<ul>\n<li>이전까지는 닷넷 1.0~3.5용으로 빌드되는 모든 어셈블리가 GAC(Global Assembly Cache)에 추가되는 경우 단일하게 <code class=\"language-text\">%windir%\\assembly</code>였지만</li>\n<li>4.0부터는<code class=\"language-text\">%windir%\\Microsoft.NET\\assembly</code>로 변경되었다.</li>\n<li>같은동작을 하는 어셈블리를 .NET 2.0, .NET 4.0으로 각각 빌드해서 제공해야한다.</li>\n</ul>\n<h3 id=\"선택적-매개변스와-명명된-인자\"><a href=\"#%EC%84%A0%ED%83%9D%EC%A0%81-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%8A%A4%EC%99%80-%EB%AA%85%EB%AA%85%EB%90%9C-%EC%9D%B8%EC%9E%90\" aria-label=\"선택적 매개변스와 명명된 인자 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>선택적 매개변스와 명명된 인자</h3>\n<ul>\n<li>\n<p>파라미터 값이 없을때 초기값을 주고싶다면 다음과 같이 기재하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">public void Output(string name, int age = 0)</code></pre></div>\n<ul>\n<li>이때 ref, out 예약어는 함께 사용할 수 없고</li>\n<li>선택 매개변수가 시작되면 필수 매개변수를 사용할 수 없으며</li>\n<li>선택 매개변수가 시작되어도 params 유형의 매개변수를 정의할 수 있다.</li>\n</ul>\n</li>\n<li>\n<p>주의할 점은 선택적 매개변수에 전달되는 인자 역시 차례대로 대응되며, 중간에 생략될 수 없다는 점이다.</p>\n<ul>\n<li>\n<p>이는 다음과같이 명명을 통해 해결할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">Output(age: 26, name: &quot;박도연&quot;)</code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"dynamic-예약어\"><a href=\"#dynamic-%EC%98%88%EC%95%BD%EC%96%B4\" aria-label=\"dynamic 예약어 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>dynamic 예약어</h3>\n<ul>\n<li>4.0부터 python이나 ruby같은 동적언어와도 연동이 쉽도록 dynamic 예약어를 추가했다.</li>\n<li>c#은 정적언어이기 때문에 <strong>컴파일 시점</strong>에 초깃값과 대응되는 타입으로 치환하지만,</li>\n<li>dynamic 예약어는 그렇게 하지않고 <strong>실행시점</strong>에 치환을 한다.</li>\n<li>Object 타입으로 선언해도 동작하지만, dynamic을 쓰는게 가독성측면에서 낫다. 결국 간편표기의 한 방법이다.</li>\n</ul>\n<h3 id=\"dynamic을-통한-리플렉션-개선\"><a href=\"#dynamic%EC%9D%84-%ED%86%B5%ED%95%9C-%EB%A6%AC%ED%94%8C%EB%A0%89%EC%85%98-%EA%B0%9C%EC%84%A0\" aria-label=\"dynamic을 통한 리플렉션 개선 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>dynamic을 통한 리플렉션 개선</h3>\n<ul>\n<li>*12/5일자 글에 리플렉션에 대한 설명이 있다</li>\n<li>기존에 리플렉션을 사용하려면 메소드 정보를 호출한 다음 invoke 메소드를 통해 인자를 넘겨줘야하는데,</li>\n<li>\n<p>dynamic 예약어를 사용하면 아래정도의 코드로 간단하게 해결가능하다</p>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">dynamic txt = &quot;test func&quot;\nbool result = txt.Contains(&quot;test&quot;);</code></pre></div>\n</li>\n</ul>\n<h3 id=\"덕타이핑\"><a href=\"#%EB%8D%95%ED%83%80%EC%9D%B4%ED%95%91\" aria-label=\"덕타이핑 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>덕타이핑</h3>\n<ul>\n<li>\n<p>공통되는 상속없이 이름만 동일한 메서드나 속성을 호출하는 경우 맥락에 따라 적절한 객체를 실행시켜준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">int DuckTypingCall(dynamic target, dynamic item) {\n    return target.IndexOf(item);\n}\n\nstring txt = &quot;test func&quot;\nList&lt;int&gt; list = new List&lt;int&gt;();\n\nDuckTypingCall(txt, &quot;text&quot;); // 0\nDuckTypingCall(list, 3); // 2</code></pre></div>\n</li>\n</ul>","timeToRead":2,"excerpt":"4.0 주요변화 이전까지는 닷넷 1.0~3.5용으로 빌드되는 모든 어셈블리가 GAC(Global Assembly Cache)에 추가되는 경우 단일하게 였지만 4.0부터는로 변경되었다. 같은동작을 하는 어셈블리를 .NET 2.0, .NET 4.…","frontmatter":{"title":"c# 기본서 - c# 4.0: dynamic","cover":"","date":"2018-12-07T10:42:00.000Z","categories":["C#"],"tags":["c#","c#4.0","dynamic","reflection"]},"fields":{"slug":"/c-기본서-c-4-0-dynamic","date":"December 06, 2018"}}},"pageContext":{"slug":"/c-기본서-c-4-0-dynamic","nexttitle":"c# 기본서 - c# 7.0: 예약어와 ValueTask/ValueTuple","nextslug":"/c-기본서-c-7-0-예약어와-value-task-value-tuple","prevtitle":"c# 기본서 - c# 5.0: async, await","prevslug":"/c-기본서-c-5-0-async-await"}}}