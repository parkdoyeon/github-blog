{"componentChunkName":"component---src-templates-post-js","path":"/window에서-python-버전-구분해서-실행하기","result":{"data":{"markdownRemark":{"html":"<p>node-sass을 폐쇄된 윈도우 ci에서 빌드하기위해 어쩔수없이 python 2.x버전을 설치했는데, 에러가 발생했다. node-sass를 빌드하는 node-gyp이 파이썬을 실행할 때 커맨드라인에서 <code class=\"language-text\">python2</code>를 사용하는데, unix기반 os에서는 파이썬 버전에 따라 python2, python3와 같은 변수가 실행명령어로 바인딩이 되지만 윈도우는 그렇지 않기 때문이다(깃헙에 윈도우 환경을 고려해달라는 이슈가 올라와있다). 할수없이 커맨드 라인에서 <code class=\"language-text\">python2</code> 명령어를 인식할 수 있도록 환경변수를 세팅했다.</p>\n<h1 id=\"윈도우와-python-환경변수-세팅\"><a href=\"#%EC%9C%88%EB%8F%84%EC%9A%B0%EC%99%80-python-%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98-%EC%84%B8%ED%8C%85\" aria-label=\"윈도우와 python 환경변수 세팅 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>윈도우와 python 환경변수 세팅</h1>\n<p>파이썬은 설치시 환경변수 세팅 옵션을 체크하면 자동으로 변수를 세팅한다. 윈도우 <code class=\"language-text\">제어판 &gt; 시스템 &gt; 고급시스템설정 &gt; 환경변수</code>에 들어가면 사용자 변수 혹은 시스템 변수에 Path 라는 변수명을 갖고있는 값이 있다. 파이썬 환경변수 세팅이 됐다면 여기에 기존 파이썬 경로들이 나오는데, path의 입력 순서에 따라 첫번째로 작성된 파이썬 경로가 디폴트로 호출된다. 가령 아래와같이 입력이 되어있다면,</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">C:\\Users\\doyeon\\AppData\\Local\\Programs\\Python\\Python38-32\\Scripts\\\nC:\\Users\\doyeon\\AppData\\Local\\Programs\\Python\\Python38-32\\\nC:\\Users\\doyeon\\AppData\\Local\\Programs\\Python\\Python37-32\\Scripts\\\nC:\\Users\\doyeon\\AppData\\Local\\Programs\\Python\\Python37-32\\</code></pre></div>\n<p>Python38-32가 상위에 입력이 되어있으므로 커맨드라인에서 <code class=\"language-text\">python</code>을 호출할 때 python 3.8이 실행된다. </p>\n<h1 id=\"py--38로-버전-구분해서-실행하기\"><a href=\"#py--38%EB%A1%9C-%EB%B2%84%EC%A0%84-%EA%B5%AC%EB%B6%84%ED%95%B4%EC%84%9C-%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0\" aria-label=\"py  38로 버전 구분해서 실행하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>py -3.8로 버전 구분해서 실행하기</h1>\n<p>unix 체제와 다를뿐이지 윈도우에서도 버전을 구분해서 실행할 수 있는 기본 명령어가 있다.<code class=\"language-text\">py -3.7</code> 혹은 <code class=\"language-text\">py -3.8</code>와 같은 형태로 입력하면된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">C:\\Users\\doyeon&gt;py -3.7\nPython 3.7.3 (v3.7.3:ef4ec6ed12, Mar 25 2019, 21:26:53) [MSC v.1916 32 bit (Intel)] on win32\nType &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.\n&gt;&gt;&gt;</code></pre></div>\n<h1 id=\"python-3x를-메인으로-쓰면서-파이썬-27-세팅하기\"><a href=\"#python-3x%EB%A5%BC-%EB%A9%94%EC%9D%B8%EC%9C%BC%EB%A1%9C-%EC%93%B0%EB%A9%B4%EC%84%9C-%ED%8C%8C%EC%9D%B4%EC%8D%AC-27-%EC%84%B8%ED%8C%85%ED%95%98%EA%B8%B0\" aria-label=\"python 3x를 메인으로 쓰면서 파이썬 27 세팅하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>python 3.x를 메인으로 쓰면서 파이썬 2.7 세팅하기</h1>\n<p>하지만 나처럼 python을 3.x버전대로 쓰면서 unix os처럼 python2를 호출하고싶다면, 우선 파이썬2를 설치하고 해당 경로를 환경변수로 추가해야한다. 가령 파이썬이 <code class=\"language-text\">c:\\Python27</code>에 설치가 되었다면 해당 경로를 38버전 뒤에 추가해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">C:\\Users\\doyeon\\AppData\\Local\\Programs\\Python\\Python38-32\\Scripts\\\nC:\\Users\\doyeon\\AppData\\Local\\Programs\\Python\\Python38-32\\\nc:\\Python27\\Scripts\nc:\\Python27\\</code></pre></div>\n<p>그리고 python2를 사용하기 위해서 <code class=\"language-text\">c:\\Python27\\</code>경로에 있는 <code class=\"language-text\">python.exe</code>파일의 이름을 <code class=\"language-text\">python2.exe</code>로 바꿔준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">C:\\Users\\doyeon&gt;python2\nPython 2.7.16 (v2.7.16:ef4ec6ed12, Mar 25 2019, 21:26:53) [MSC v.1916 32 bit (Intel)] on win32\nType &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.\n&gt;&gt;&gt;</code></pre></div>","timeToRead":2,"excerpt":"node-sass을 폐쇄된 윈도우 ci에서 빌드하기위해 어쩔수없이 python 2.x버전을 설치했는데, 에러가 발생했다. node-sass를 빌드하는 node-gyp이 파이썬을 실행할 때 커맨드라인에서 를 사용하는데, unix기반 os…","frontmatter":{"title":"window에서 python 버전 구분해서 실행하기","cover":"","date":"2019-10-18T18:16:19.000Z","categories":["Phython"],"tags":["python","python2","python3","path"]},"fields":{"slug":"/window에서-python-버전-구분해서-실행하기","date":"October 17, 2019"}}},"pageContext":{"slug":"/window에서-python-버전-구분해서-실행하기","nexttitle":"vue cli 3.X 버전에 typscript, webpack 세팅하기","nextslug":"/vue-cli-3-x-버전에-typscript-webpack-세팅하기","prevtitle":"npm 빌드위한 docker gitlab CI 세팅 삽질기","prevslug":"/npm-빌드위한-docker-gitlab-ci-세팅-삽질기"}}}