{"componentChunkName":"component---src-templates-post-js","path":"/yarn-설치하고-다른-경로에-있는-node-modules-참조하기","result":{"data":{"markdownRemark":{"html":"<p>vue.js 개발환경을 구축하면서 노드파일을 관리해야하는 이슈가 생겼다. 배포시 디렉토리 구조가 아래와 같은데</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"> MYDIR<span class=\"token operator\">/</span>\n   projects<span class=\"token operator\">/</span>\n     project_a\n        <span class=\"token operator\">/</span>package<span class=\"token punctuation\">.</span>json\n        <span class=\"token operator\">/</span>node_modules\n     project_b\n        <span class=\"token operator\">/</span>package<span class=\"token punctuation\">.</span>json\n        <span class=\"token operator\">/</span>node_modules\n     project_c\n        <span class=\"token operator\">/</span>package<span class=\"token punctuation\">.</span>json\n        <span class=\"token operator\">/</span>node_modules</code></pre></div>\n<p>  이 상태에서 신규 디렉토리 배포가 나가면 <code class=\"language-text\">npm i</code>명령 마다 이미 빌드서버에 설치한 패키지가 중복되는 것은 물론, <code class=\"language-text\">node_modules</code> 디렉토리가 하드디스크를 가득 차지하는 문제가 발생한다. </p>\n<p>  그래서 아래와 같이 각 프로젝트가 하나의 노드 모듈을 바라보도록 수정하기로 했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">MYDIR<span class=\"token operator\">/</span>\n projects<span class=\"token operator\">/</span>\n   node_modules<span class=\"token operator\">/</span>\n   project_a\n      <span class=\"token operator\">/</span>package<span class=\"token punctuation\">.</span>json\n   project_b\n      <span class=\"token operator\">/</span>package<span class=\"token punctuation\">.</span>json\n   project_c\n      <span class=\"token operator\">/</span>package<span class=\"token punctuation\">.</span>json</code></pre></div>\n<h1 id=\"방법\"><a href=\"#%EB%B0%A9%EB%B2%95\" aria-label=\"방법 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>방법</h1>\n<p><a href=\"https://stackoverflow.com/questions/26293049/specify-path-to-node-modules-in-package-json\">스택오버플로우</a>에서 찾은 환경변수 변경하는 방법은 윈도우 환경에서는 잘 동작하지 않았다. yarn을 사용하는 방법이 있길래, 이참에 한번 설치해보았다.</p>\n<h1 id=\"yarn이란\"><a href=\"#yarn%EC%9D%B4%EB%9E%80\" aria-label=\"yarn이란 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>yarn이란?</h1>\n<p>node 모듈관리를 조금 더 체계적으로 하기 위한 패키지 관리 툴이다. 별도의 용도를 목적으로 하지만 기본적으로 기존에 세팅된 npm프로젝트와 함께 사용해도 된다는 점이 좋다. 나는 단순히 노드 모듈 참조를 조금더 간단한 설정으로 세팅하고싶어 설치했지만, <a href=\"https://academy.realm.io/kr/posts/mobilization-konstantin-raev-taming-node-modules-at-facebook/\">이 포스트(Facebook은 Node_Modules를 어떻게 관리할까요?)</a>를 참조하길 권한다. 2017년에 작성된 오래된 글이지만 yarn의 개념과 도입의도를 파악할 수 있는 좋은 글이다.</p>\n<h1 id=\"yarn-설치와-사용법\"><a href=\"#yarn-%EC%84%A4%EC%B9%98%EC%99%80-%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-label=\"yarn 설치와 사용법 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>yarn 설치와 사용법</h1>\n<p>간단하다. npm을 통해 설치하고 npm대신 yarn을 사용하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm i -g yarn\n\n# vue.js 시작인 경우\nnpm run dev\nyarn run dev</code></pre></div>\n<h1 id=\"다른-경로의-노드-모듈-참조하기\"><a href=\"#%EB%8B%A4%EB%A5%B8-%EA%B2%BD%EB%A1%9C%EC%9D%98-%EB%85%B8%EB%93%9C-%EB%AA%A8%EB%93%88-%EC%B0%B8%EC%A1%B0%ED%95%98%EA%B8%B0\" aria-label=\"다른 경로의 노드 모듈 참조하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다른 경로의 노드 모듈 참조하기</h1>\n<p>아래와같이 서로 다른 package.json설정을 갖는 프로젝트가 있을때, yarn을 통해 프로젝트 디렉토리마다 node<em>modules를 생성하지 않고 상위에 있는 node</em>modules를 참조할 수 있다.</p>\n<p>방법 1. 실행 명령어를 통해 설정하기</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">yarn run dev <span class=\"token operator\">--</span>modules<span class=\"token operator\">-</span>folder <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>node_modules</code></pre></div>\n<p>방법 2. 설정파일 만들기\npackage.json이 있는 root 경로에 .yarnrc파일을 생성하고 아래 내용을 입력한다</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">-<span class=\"token operator\">-</span>modules<span class=\"token operator\">-</span>folder <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>node_modules</code></pre></div>","timeToRead":2,"excerpt":"vue.js…","frontmatter":{"title":"yarn 설치하고 다른 경로에 있는 node_modules 참조하기","cover":"","date":"2019-10-08T16:25:28.000Z","categories":["JavaScript"],"tags":["javascript","yarn","node"]},"fields":{"slug":"/yarn-설치하고-다른-경로에-있는-node-modules-참조하기","date":"October 07, 2019"}}},"pageContext":{"slug":"/yarn-설치하고-다른-경로에-있는-node-modules-참조하기","nexttitle":"JavaScript - 정규식으로 문자열 replace하기","nextslug":"/java-script-정규식으로-문자열-replace하기","prevtitle":"Visual Studio Code 유용한/기본적인 세팅들","prevslug":"/visual-studio-code-유용한-기본적인-세팅들"}}}