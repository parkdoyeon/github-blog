{"componentChunkName":"component---src-templates-post-js","path":"/logstash-파이프라인-만들기","result":{"data":{"markdownRemark":{"html":"<p>ElasticSearch와 Filebeat와의 호환성, 다른 어플리케이션보단 조금 더 프로그래밍적인 파이프라인 설정방식을 사용한다는 이유로 logstash를 쓰기로 했다. 생각만큼 쉽지 않게 파이프라인 설정을 마치고나니 세상에 공짜는 없구나 싶었다. 어떤 기술을 제대로 이해하고 올바른 방식으로 활용하려면 시행착오를 겪어야 한다는 걸. 이 포스트에는 Logstash의 디버깅 모드 설정하는 방법과 파일비트에서 전달된 데이터의 형식, 그리고 여기에 맞는 logstash 데이터의 파이프라인 필터 설정과정을 기록했다.</p>\n<h3 id=\"디버깅-모드-세팅하기\"><a href=\"#%EB%94%94%EB%B2%84%EA%B9%85-%EB%AA%A8%EB%93%9C-%EC%84%B8%ED%8C%85%ED%95%98%EA%B8%B0\" aria-label=\"디버깅 모드 세팅하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>디버깅 모드 세팅하기</h3>\n<p>먼저 파일비트-카프카-로그스태시-엘라스틱서치 구간을 실행시킨 다음에 설정테스트를 하다가, 쉽게 끝나지 않으리라는걸 깨닫고 디버깅 모드를 세팅했다. 이 판단이 더 빠르게 이뤄졌음 좋았을텐데. 세팅 전까지 파일비트를 껐다 키고, 데이터를 보려고 es인덱스를 지우기를 반복했다. 아래의 설정은 커맨드라인에서 로그를 입력받고 명령창에 출력 및 json파일로 남긴다. 방법은 <a href=\"https://deviantony.wordpress.com/2014/06/04/logstash-debug-configuration/\">이 포스트</a>를 참조했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\">input <span class=\"token punctuation\">{</span>\n  stdin <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\"># 커맨드라인에서 받은 로그를 input으로 받는다</span>\n<span class=\"token punctuation\">}</span>\n\nfilter <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\"># 필터 세팅</span>\n<span class=\"token punctuation\">}</span>\n\noutput <span class=\"token punctuation\">{</span>\n  stdout <span class=\"token punctuation\">{</span> codec =<span class=\"token punctuation\">></span> \"json\" <span class=\"token punctuation\">}</span>\n  file <span class=\"token punctuation\">{</span> codec =<span class=\"token punctuation\">></span> \"json\" path =<span class=\"token punctuation\">></span> \"tmp/output.json\" <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\"># 로그스태시 home 디렉토리에서 디버깅 결과 로그를 파일로 남긴다</span>\n  <span class=\"token comment\"># 이때 권한문제가 발생하면 도커 attach된 상태에서 권한 주는 것을 잊지말자</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"파일비트에서-전달된-raw-data의-형태\"><a href=\"#%ED%8C%8C%EC%9D%BC%EB%B9%84%ED%8A%B8%EC%97%90%EC%84%9C-%EC%A0%84%EB%8B%AC%EB%90%9C-raw-data%EC%9D%98-%ED%98%95%ED%83%9C\" aria-label=\"파일비트에서 전달된 raw data의 형태 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파일비트에서 전달된 raw data의 형태</h3>\n<p>데이터가 파일비트 -> 카프카 를 통해 -> 로그스태시로 들어올때 로그라인은 아래와 같다. 파일비트에는 필드만 추가해주는 정도의 최소한의 설정을 해줬다. 포스트를 쓰면서 json 형식에 맞춰서 줄바꿈을 해줬지만 실제로는 아래처럼 한줄짜리 라인으로 온다. </p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span><span class=\"token property\">\"@timestamp\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"2018-10-25T07:53:39.249Z\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"@metadata\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token property\">\"beat\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"filebeat\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"doc\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"6.4.2\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"topic\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"kr-r2\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"message\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"2018-10-11 05:40:30 172.0.0.1 GET /news/updates/detail bbmNo=89 443 - 10.1.30.99 Mozilla/5.0+(Windows+NT+6.1;+Win64;+x64)+AppleWebKit/537.36+(KHTML,+like+Gecko)+Chrome/69.0.3497.100+Safari/537.36 https://test.webpage.com/main 200 0 0 288\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"prospector\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"log\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"input\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"log\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"fields\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token property\">\"level\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"none\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"logtype\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"iis\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"beat\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"WEB-TEST-01\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"hostname\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"WEB-TEST-01\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"6.4.2\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"host\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"WEB-TEST-01\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"source\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"C:\\\\\\\\inetpub\\\\\\\\logs\\\\\\\\LogFiles\\\\\\\\W3SVC2\\\\\\\\u_ex181011.log\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"offset\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"697632\"</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>정리하면 아래와 같다. 앞서 말했듯이 중개자인 카프카는 로그라인만 전달하고, 파일비트가 로그라인을 json형식으로 만들어서 전달한다. <code class=\"language-text\">message</code> 필드가 실제 로그파일에서 갖고오는 데이터이고, 나머지 필드는 파일비트가 자체적으로 생성한다. field에는 <code class=\"language-text\">filebeat.yml</code>파일에 개발자가 경로별로 세팅해준 데이터가 전달된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"@timestamp\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"2018-10-25T07:53:39.249Z\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"@metadata\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token property\">\"beat\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"filebeat\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"doc\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"6.4.2\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"topic\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"kr-r2\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"message\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"2018-10-11 05:40:30 172.0.0.1 GET /news/updates/detail bbmNo=89 443 - 10.1.30.99 Mozilla/5.0+(Windows+NT+6.1;+Win64;+x64)+AppleWebKit/537.36+(KHTML,+like+Gecko)+Chrome/69.0.3497.100+Safari/537.36 https://test.webpage.com/main 200 0 0 288\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"prospector\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"log\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"input\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"log\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"fields\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token property\">\"level\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"none\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"logtype\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"iis\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"beat\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"WEB-TEST-01\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"hostname\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"WEB-TEST-01\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"6.4.2\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"host\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"WEB-TEST-01\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"source\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"C:\\\\\\\\inetpub\\\\\\\\logs\\\\\\\\LogFiles\\\\\\\\W3SVC2\\\\\\\\u_ex181011.log\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"offset\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"697632\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"filter-세팅\"><a href=\"#filter-%EC%84%B8%ED%8C%85\" aria-label=\"filter 세팅 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>filter 세팅</h3>\n<p>로그스태시 설정을 하면서 가장 애를 먹었던 부분은 로그스태시가 파이프라인의 input 영역을 지나면서 <strong>위의 데이터를 message영역으로 한번 더 감싼다는 것</strong>을 너무 늦게알았기 때문이다. 뿐만 아니라, 파일비트에서 제이슨 형식으로 만들어서 전달한 데이터를 deserialize한다. 이렇게 되면 filter에 들어왔을 때 root 영역에 있는 field만 인식이 되고, nested field영역은 접근이 되지 않는다. 그렇기 때문에 먼저 json serialize를 해줘야했다. json 필터는 <code class=\"language-text\">source</code>를 message 영역으로 지정해주면 감싸진 message 필드는 삭제하고, 그 안의 데이터가 루트가 되어 필드가 구성된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"conf\"><pre class=\"language-conf\"><code class=\"language-conf\">filter {\n  json { source =&gt; &#39;message&#39; }\n}</code></pre></div>\n<p>json serialize 필터를 지나면 다음과 같은 형태가 된다. 그리고 임의로 다음 필터를 만들어 에러를 내면 디버거에서 다음과 같은 상태의 데이터를 출력해주며 에러 메세지를 전달한다. '=>' 표기를 통해 로그스태시가 nested field까지 제이슨 필드로 인식하는지 알 수 있다. 언뜻보면 없던 event 영역이 감싸진 것 처럼 보이는데, event는 로그스태시 데이터의 root 필드 이름이라고 보면된다. json필터의 <code class=\"language-text\">target</code>이 지정되어있지않으면 자동으로 루트 필더로 데이터가 전달된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"event\"</span>=> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"source\"</span>=><span class=\"token string\">\"C:\\\\\\\\inetpub\\\\\\\\logs\\\\\\\\LogFiles\\\\\\\\W3SVC2\\\\\\\\u_ex181011.log\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"beat\"</span>=> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"name\"</span>=><span class=\"token string\">\"WEB-TEST-01\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hostname\"</span>=><span class=\"token string\">\"WEB-TEST-01\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"version\"</span>=><span class=\"token string\">\"6.4.2\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"@timestamp\"</span>=><span class=\"token number\">2018</span><span class=\"token number\">-10</span><span class=\"token number\">-25</span>T<span class=\"token number\">07</span><span class=\"token operator\">:</span><span class=\"token number\">53</span><span class=\"token operator\">:</span><span class=\"token number\">39.249</span>Z<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"fields\"</span>=><span class=\"token punctuation\">{</span><span class=\"token string\">\"logtype\"</span>=><span class=\"token string\">\"iis\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"level\"</span>=><span class=\"token string\">\"none\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"offset\"</span>=><span class=\"token string\">\"697632\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"@version\"</span>=><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"message\"</span>=><span class=\"token string\">\"2018-10-11 05:40:30 172.0.0.1 GET /news/updates/detail bbmNo=89 443 - 10.1.30.99 Mozilla/5.0+(Windows+NT+6.1;+Win64;+x64)+AppleWebKit/537.36+(KHTML,+like+Gecko)+Chrome/69.0.3497.100+Safari/537.36 https://test.webpage.com/main 200 0 0 288\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"host\"</span>=> <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span>=><span class=\"token string\">\"WEB-TEST-01\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"prospector\"</span>=> <span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span>=><span class=\"token string\">\"log\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"input\"</span>=> <span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span>=><span class=\"token string\">\"log\"</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"nested-field에-접근하는-조건문-만들기\"><a href=\"#nested-field%EC%97%90-%EC%A0%91%EA%B7%BC%ED%95%98%EB%8A%94-%EC%A1%B0%EA%B1%B4%EB%AC%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"nested field에 접근하는 조건문 만들기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>nested field에 접근하는 조건문 만들기</h3>\n<p>로직을 만들기위해 필드에 접근하려면 괄호(₩[]₩)를 통해서 접근하면 된다. 필드 내부의 필드에 접근하려면 배열처럼 괄호를 두번 표기하면 된다. 나는 로그타입이 iis인경우와 nlog인경우로 나뉘기때문에, 해당 필드에 접근해서 타입을 확인하고 적절한 형식으로 grok 파싱을 해주고, 필요없는 필드는 <code class=\"language-text\">mutate</code> 영역에서 삭제했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">filter <span class=\"token punctuation\">{</span>\n  json <span class=\"token punctuation\">{</span> source => 'message' <span class=\"token punctuation\">}</span>\n  if <span class=\"token punctuation\">[</span>fields<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>logtype<span class=\"token punctuation\">]</span> == <span class=\"token string\">\"nlog\"</span> <span class=\"token punctuation\">{</span>\n    grok <span class=\"token punctuation\">{</span>\n      match => <span class=\"token punctuation\">[</span> 'message'<span class=\"token punctuation\">,</span> '%<span class=\"token punctuation\">{</span>DATESTAMP<span class=\"token operator\">:</span>date<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>%<span class=\"token punctuation\">{</span>DATA<span class=\"token operator\">:</span>url<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>%<span class=\"token punctuation\">{</span>NUMBER<span class=\"token operator\">:</span>status<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>%<span class=\"token punctuation\">{</span>IP<span class=\"token operator\">:</span>serverip<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>%<span class=\"token punctuation\">{</span>IP<span class=\"token operator\">:</span>clientip<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span><span class=\"token property\">\"PostData\"</span> <span class=\"token operator\">:</span> %<span class=\"token punctuation\">{</span>DATA<span class=\"token operator\">:</span>postdata<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"GetData\"</span> <span class=\"token operator\">:</span> %<span class=\"token punctuation\">{</span>DATA<span class=\"token operator\">:</span>getdata<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>%<span class=\"token punctuation\">{</span>DATA<span class=\"token operator\">:</span>stopwatch<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span><span class=\"token property\">\"message\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"%{DATA:message}\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>%<span class=\"token punctuation\">{</span>DATA<span class=\"token operator\">:</span>exception<span class=\"token punctuation\">}</span>$' <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span> else if <span class=\"token punctuation\">[</span>fields<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>logtype<span class=\"token punctuation\">]</span> == <span class=\"token string\">\"iis\"</span> <span class=\"token punctuation\">{</span>\n    grok <span class=\"token punctuation\">{</span>\n      match => <span class=\"token punctuation\">[</span> <span class=\"token string\">\"message\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"%{DATESTAMP:date} %{IP:server} %{WORD:method} %{DATA:uri_stem} %{DATA:uri_query} %{NUMBER:port} %{DATA:user_name} %{IP:client} %{DATA:user_agent} %{NUMBER:status} %{NUMBER:sub_status} %{NUMBER:win32_status} %{NUMBER:time_taken}\"</span> <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  mutate <span class=\"token punctuation\">{</span>\n    remove_field => <span class=\"token punctuation\">[</span>'beat'<span class=\"token punctuation\">,</span> 'input'<span class=\"token punctuation\">,</span> 'prospector'<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이렇게 한면 최종적으로 es에 전달되는 데이터 형태는 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"message\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"2018-10-11 05:40:30 172.0.0.1 GET /news/updates/detail bbmNo=89 443 - 10.1.30.99 Mozilla/5.0+(Windows+NT+6.1;+Win64;+x64)+AppleWebKit/537.36+(KHTML,+like+Gecko)+Chrome/69.0.3497.100+Safari/537.36 https://test.webpage.com/main 200 0 0 288\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"fields\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token property\">\"level\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"none\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"logtype\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"iis\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"uri_stem\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"/news/updates/detail\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"sub_status\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"time_taken\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"288\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"client\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"10.1.30.99\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"user_agent\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"Mozilla/5.0+(Windows+NT+6.1;+Win64;+x64)+AppleWebKit/537.36+(KHTML,+like+Gecko)+Chrome/69.0.3497.100+Safari/537.36 https://test.webpage.com/main\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"@timestamp\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"2018-10-25T07:53:39.249Z\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"date\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"18-10-11 05:40:30\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"server\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"172.0.0.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"win32_status\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"host\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"WEB-TEST-01\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"user_name\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"-\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"offset\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"697632\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"status\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"200\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"uri_query\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"bbmNo=89\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"method\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"port\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"443\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"source\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"C:\\\\\\\\inetpub\\\\\\\\logs\\\\\\\\LogFiles\\\\\\\\W3SVC2\\\\\\\\u_ex181011.log\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"@version\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"1\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","timeToRead":5,"excerpt":"ElasticSearch와 Filebeat와의 호환성, 다른 어플리케이션보단 조금 더 프로그래밍적인 파이프라인 설정방식을 사용한다는 이유로 logstash…","frontmatter":{"title":"Logstash - 파이프라인 만들기","cover":"","date":"2018-10-28T22:00:00.000Z","categories":["ELK"],"tags":["logstash","filebeat","elk","logger"]},"fields":{"slug":"/logstash-파이프라인-만들기","date":"October 27, 2018"}}},"pageContext":{"slug":"/logstash-파이프라인-만들기","nexttitle":"c# 기본서 - 멤버별 유형확장","nextslug":"/c-기본서-멤버별-유형확장","prevtitle":"c# 기본서 - 빌드환경과 GC, 힙과 스택","prevslug":"/c-기본서-빌드환경과-gc-힙과-스택"}}}