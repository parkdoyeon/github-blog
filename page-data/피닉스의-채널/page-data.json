{"componentChunkName":"component---src-templates-post-js","path":"/피닉스의-채널","result":{"data":{"markdownRemark":{"html":"<p>채널은 커뮤니케이션 메커니즘이고, 소켓은 이를 수행하는 것(implementation)이다.\n적절한 클라이언트만 구현되어있다면, 채널을 통해 채팅방, 운송 트래킹, 센서 모니터링, 브라우저의 자바스크립트 혹은 css 변경 등이 가능하다.\n채널은 일반 HTTP통신 처럼 stateless하지 않은 long-live한 connection을 유지한다. 이 연결들은 BEAM의 경량 프로세스를 통해 동시적으로 처리된다. 피닉스의 체널은 \b수백만개 구독체(subscriber를 갖고 초당 수십만개의 메세지를 서비스 가능한 latency로 처리한다. 채널의 특징은 다음과 같다.</p>\n<ol>\n<li>Bidirectional browser-server communication</li>\n<li>Nested inside conventional HTTP request</li>\n<li>Reliable, performant, cross browser</li>\n</ol>\n<p>브라우저 서버간의 양방향 커뮤니케이션으로, http 요청에 내장되어 있으며, 브라우저종과 무관하게 높은 퍼포먼스와 신뢰성을 갖고있다.</p>\n<p>채널은 클라이언트의 토픽 단위로 생성된다. MVC의 컨트롤러같은 역할을 하는데, 요청을 받기만 하지 않고 보낼 수도 있다는 점과 단일 request/response 형태를 넘어서서 지속될 수 있다는 차이가 있다. 전송방식은 websocket과 longpoll을 선택할 수 있으며, Endpoint 모듈 내에서 세팅 가능하다.</p>\n<p>피닉스 채널은 PubSub 모듈을 내장하고 있는데, 실제로 코드로직에서 다룰 일은 없다. PubSub 모듈은 BEAM의 네이티브 메세징을 사용하여 메세지를 받고 전달하는 일을 수행한다.</p>\n<p>클라이언트는 피닉스 채널의 <code class=\"language-text\">join</code>을 호출하여 채널에 합류한다. 클라이언트로부터 요청이 일어날 때 피닉스 채널에선 <code class=\"language-text\">handle_in</code>이 호출되고, <code class=\"language-text\">handle_in</code> 내부 로직에서 연결된 모든 클라이언트들에게 수신된 이벤트에 대한 <code class=\"language-text\">broadcast</code>를 할 수 있다. 또한, <code class=\"language-text\">broadcast</code>가 수행되어 클라이언트에 닿기 전에 이 요청을 <code class=\"language-text\">intercept할</code> 수 있다.</p>\n<p>클라이언트부터 서버의 소켓통신을 진행하는 컨트롤러에 요청이 일어나고\n서버는 이에대한 html리스폰스를 한다\n이 html리스폰스를 통해 클라이언트 브라우저는 자바 스크립트코드로 소켓을 열기위한 리퀘스트를 수행한다.\n그러면 서버에 소켓 엔드포인트로 요청이가고, 그 이후부터는 async free-for-all로 양쪽의 이벤트 핸들러에 의한 통신이 자유롭게 이뤄진다.</p>\n<p>Endpoint is the same as endpoint for http request.\nAll connection is out to tcp socket.</p>\n<p>The sockets is created on that endpoints. These endpoints are place to put all of the channels. You can also do some authentication up here to socket level.\n채널은 웹소켓 통신에서 http통신의 컨트롤러같은 역할이라고 이해하면 된다.</p>\n<p> And channels handle the messages back and forth.</p>\n<p> 참고자료</p>\n<blockquote>\n<p><a href=\"https://hexdocs.pm/phoenix/channels.html\">피닉스 공식문서</a></p>\n</blockquote>","timeToRead":1,"excerpt":"채널은 커뮤니케이션 메커니즘이고, 소켓은 이를 수행하는 것(implementation)이다.\n적절한 클라이언트만 구현되어있다면, 채널을 통해 채팅방, 운송 트래킹, 센서 모니터링, 브라우저의 자바스크립트 혹은 css…","frontmatter":{"title":"피닉스의 채널","cover":"","date":"2020-03-11T16:26:08.000Z","categories":["Elixir"],"tags":["elixir","phoenix","channel","socket"]},"fields":{"slug":"/피닉스의-채널","date":"March 10, 2020"}}},"pageContext":{"slug":"/피닉스의-채널","nexttitle":"Elixir와 함수형 프로그래밍","nextslug":"/elixir와-함수형-프로그래밍","prevtitle":"쿠버네티스 자주 사용하는 명령어 정리","prevslug":"/쿠버네티스-자주-사용하는-명령어-정리"}}}