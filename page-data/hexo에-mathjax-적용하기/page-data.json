{"componentChunkName":"component---src-templates-post-js","path":"/hexo에-mathjax-적용하기","result":{"data":{"markdownRemark":{"html":"<p>머신러닝 공부를 하다보니 수식을 입력해야하는데, 처음에는 직접 cdn을 호출해서 적용했었다. 꽤 간단하게 되는 것 같아 별도로 수정을 안하다가 어느날 로그(\\(logx\\))입력시 브라켓({})에서 띄워쓰기를 안해주니 다음과 같이 렌더링 에러가 났다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Template render error: <span class=\"token punctuation\">(</span>unknown path<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span>Line <span class=\"token number\">14</span>, Column <span class=\"token number\">244</span><span class=\"token punctuation\">]</span>\n  expected variable end\n    at Object._prettifyError <span class=\"token punctuation\">(</span>/Users/doyeon/Dev/blog/node_modules/nunjucks/src/lib.js:36:11<span class=\"token punctuation\">)</span>\n    at Template.render <span class=\"token punctuation\">(</span>/Users/doyeon/Dev/blog/node_modules/nunjucks/src/environment.js:542:21<span class=\"token punctuation\">)</span>\n    at Environment.renderString <span class=\"token punctuation\">(</span>/Users/doyeon/Dev/blog/node_modules/nunjucks/src/environment.js:380:17<span class=\"token punctuation\">)</span>\n    at Promise.fromCallback.cb <span class=\"token punctuation\">(</span>/Users/doyeon/Dev/blog/node_modules/hexo/lib/extend/tag.js:62:48<span class=\"token punctuation\">)</span>\n    at tryCatcher <span class=\"token punctuation\">(</span>/Users/doyeon/Dev/blog/node_modules/bluebird/js/release/util.js:16:23<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># (후략)</span></code></pre></div>\n<p>구글링 하다보니 띄워쓰기가 문제가 되는 경우가 있다고 해서 브라켓에 띄워쓰기를 넣었더니 에러가 사라졌다.\n이참에 종종 인라인 수식에 적용이 안되는 경우까지 해결해보려고 정석대로 hexo에 mathjax를 적용하도록 하는 글을 찾아봤다.</p>\n<p>정리가 잘 된 글이 있었지만 노드 모듈 스크립트를 직접 수정해야해서 git 저장소를 통해 여러 PC에서 포스트를 작성하는 내 입장에서는 번거로운 구석이 있었다. (node_module이 .gitignore에 있으므로)</p>\n<p>그래서 소스수정이 없는 방식을 찾다가 <a href=\"https://linkinpark213.com/2018/04/24/mathjax/\">이 글</a>을 찾았다.\n블로그 디렉토리에 hexo-math를 다운로드 받아 사용하는 글이다. 그런데 무엇이 잘못됐는지 이상하게</p>\n<ol>\n<li>_config내에 cdn호출 입력해도 페이지에 호출이 안되는데다,</li>\n<li>mathjax를 _config파일 최상위에 정의하는게 deprecate가 되고 있었다.</li>\n<li>게다가 함께 설치되는 hexo-inject 모듈이 더이상 업데이트가 되지 않는다는 안내가 나왔다.</li>\n</ol>\n<p>알고보니 인라인에 적용이 안되는 문제는</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ 이렇게 $ 쓰던걸 \\\\( 이렇게 \\\\) 바꾸니까 해결이 됐다.</code></pre></div>\n<p>정리하면,</p>\n<ol>\n<li>\n<p>header영역에 cdn 호출 스크립트 직접 추가하고</p>\n<div class=\"gatsby-highlight\" data-language=\"sass\"><pre class=\"language-sass\"><code class=\"language-sass\"><span class=\"token selector\">&lt;script src=</span><span class=\"token string\">\"//cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML\"</span><span class=\"token selector\">>&lt;/script></span></code></pre></div>\n</li>\n<li>\n<p>수식입력하기만 바꾸는걸로.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$$  수식 $$ # 단독입력\n\\\\( 수식 )\\\\ # 인라인 입력</code></pre></div>\n</li>\n</ol>","timeToRead":1,"excerpt":"머신러닝 공부를 하다보니 수식을 입력해야하는데, 처음에는 직접 cdn을 호출해서 적용했었다. 꽤 간단하게 되는 것 같아 별도로 수정을 안하다가 어느날 로그(\\(logx…","frontmatter":{"title":"hexo에 mathjax 적용하기","cover":"","date":"2019-06-07T17:02:33.000Z","categories":["Web"],"tags":["web","hexo","mathjax"]},"fields":{"slug":"/hexo에-mathjax-적용하기","date":"June 06, 2019"}}},"pageContext":{"slug":"/hexo에-mathjax-적용하기","nexttitle":"Deep Learning From Scratch - 2. 신경망 학습","nextslug":"/deep-learning-from-scratch-2-신경망-학습","prevtitle":"테스트 자동화 - (1) Appium 서버 실행하기 (+안드로이드 테스트환경 세팅)","prevslug":"/테스트-자동화-1-appium-서버-실행하기-안드로이드-테스트환경-세팅"}}}