{"componentChunkName":"component---src-templates-post-js","path":"/docker-compose-up에서-네트워크-생성이-되지-않을-때","result":{"data":{"markdownRemark":{"html":"<h1 id=\"발단\"><a href=\"#%EB%B0%9C%EB%8B%A8\" aria-label=\"발단 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>발단</h1>\n<p>어떤 환경에서 발생하는지는 정확히 알 수 없지만, 회사의 서버에 도커를 설치하면 기본 ip 대역 생성이 되지않아 아래의 메세지와 함께 도커 실행이 되지 않았다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Error starting daemon: Error initionalizing network controller</code></pre></div>\n<p>그래서 아래의 명령어로 직접 bridge ip를 추가해줬었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root$ <span class=\"token function\">ip</span> <span class=\"token function\">link</span> <span class=\"token function\">add</span> name docker0 <span class=\"token builtin class-name\">type</span> bridge\nroot$ <span class=\"token function\">ip</span> addr <span class=\"token function\">add</span> dev docker0 <span class=\"token number\">172.17</span>.0.1/16\nroot$ <span class=\"token function\">service</span> docker start</code></pre></div>\n<h1 id=\"문제\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h1>\n<p>default 네트워크로 bridge를 사용하는 환경에서 컨테이너를 실행해서 잘 사용해오다가,\n근래에 서버 점검할때마다 컨테이너가 한꺼번에 종료되는 일이 왕왕 발생해서 docker-compose로 정리를 했다.\n알파에서 테스트를 마치고 라이브 서버에서 docker-compose up 명령을 실행하니,\n다음과 같은 에러가 발생하면서 어떤 컨테이너도 실행되지 않았다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ERROR: could not <span class=\"token function\">find</span> an available, non-overlapping IPv4 address pool among the defaults to assign to the network”</code></pre></div>\n<p>'docker network prune'으로 사용하지 않는 네트워크를 정리를 하면 해결된단 얘기가 있었으나 이 상황은 그렇지않았다.\n검색해보니 보통은 컨테이너에 너무 많은 ip가 할당되면 이런 문제가 발생한다고 하는데,\n내게는 이런 문제가 해당되지 않으니까 사용하지 않는 ip를 정리한다고 문제가 해결될것이 아니었다.</p>\n<h1 id=\"해결\"><a href=\"#%ED%95%B4%EA%B2%B0\" aria-label=\"해결 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해결</h1>\n<p>그래서 생각하기를, 이 서버는 도커 네트워크 환경을 조성하려면 IP설정을 내가 직접 해줬어야 했으니까,\n도커컴포즈도 대역 할당을 직접 해줘야하나? 싶어서 네트워크를 생성했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">docker network create --driver<span class=\"token operator\">=</span>bridge <span class=\"token punctuation\">\\</span>\n--subnet<span class=\"token operator\">=</span><span class=\"token number\">172.72</span>.0.0/16 <span class=\"token punctuation\">\\</span>\n--ip-range<span class=\"token operator\">=</span><span class=\"token number\">172.72</span>.0.0/24 <span class=\"token punctuation\">\\</span>\n--gateway<span class=\"token operator\">=</span><span class=\"token number\">172.72</span>.0.1 <span class=\"token punctuation\">\\</span>\nesmaster</code></pre></div>\n<p>그리고 docker-compose파일에도 각 서비스별로 network_mode: esmaster를 추가해줬더니, 서비스가 잘 올라왔다!</p>\n<p>도커는 아.. 이젠 정말 네트워크 공부를 제대로 해야하나...싶게 만들다가도\n약간의 직감으로 생각보다 빨리 문제가 해결되는 경우가 있어서 당혹스럽다.</p>","timeToRead":1,"excerpt":"발단 어떤 환경에서 발생하는지는 정확히 알 수 없지만, 회사의 서버에 도커를 설치하면 기본 ip 대역 생성이 되지않아 아래의 메세지와 함께 도커 실행이 되지 않았다. 그래서 아래의 명령어로 직접 bridge ip를 추가해줬었다. 문제 default…","frontmatter":{"title":"docker-compose up에서 네트워크 생성이 되지 않을 때","cover":"","date":"2019-03-29T18:24:00.000Z","categories":["Dev-Env"],"tags":["docker","docker-compose"]},"fields":{"slug":"/docker-compose-up에서-네트워크-생성이-되지-않을-때","date":"March 28, 2019"}}},"pageContext":{"slug":"/docker-compose-up에서-네트워크-생성이-되지-않을-때","nexttitle":"Docker 이미지/컨테이너 파일로 저장하고 불러오기","nextslug":"/docker-이미지-컨테이너-파일로-저장하고-불러오기","prevtitle":"ElasticSearch - 도커를 이용해 인덱스 주기적으로 삭제하기","prevslug":"/elastic-search-도커를-이용해-인덱스-주기적으로-삭제하기"}}}