{"componentChunkName":"component---src-templates-tag-js","path":"/tags/as/","result":{"data":{"allMarkdownRemark":{"totalCount":2,"edges":[{"node":{"fields":{"slug":"/effective-c-1-언어요소","date":"December 17, 2018"},"excerpt":"지역변수를 선언할때는 var를 사용하는 것이 낫다 c#은 익명함수를 지원하면서 타입을 암시적으로 선언하는 방법을 제공한다. 정확한 타입을 알지 못하는 상태에서 명시적으로 선언할경우 득보다 실이 많다 예1 잘못된 형변환: IEnumerable…","timeToRead":4,"frontmatter":{"title":"effective c# - 1. 언어요소","tags":["effectivec#","c#","is","as","delegate","var"],"cover":"","date":"2018-12-18T16:41:00.000Z","categories":["C#"]}}},{"node":{"fields":{"slug":"/c-기본서-객체지향","date":"October 13, 2018"},"excerpt":"Getter Setter를 사용하면 좋은 이유 필드를 직접 호출하여 값변경을 하면 제약을 두고싶을때(ex 환율계산, 값 범위 제한 등 ) 필드값이 사용되는 지점에 직접 가서 변경해야한다. Get/Set…","timeToRead":2,"frontmatter":{"title":"c# 기본서 - 객체지향","tags":["c#","객체지향","기본","base","getter","setter","as","static"],"cover":"","date":"2018-10-14T18:10:00.000Z","categories":["C#"]}}}]}},"pageContext":{"tag":"as"}}}